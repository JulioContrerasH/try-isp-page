name: GitHub Pages

on:
  push:
    branches:
      - main  # La rama principal desde la que se hará el push
  pull_request:

jobs:
  deploy_main:
    runs-on: ubuntu-22.04
    concurrency:
      group: deploy-main-${{ github.ref }}
    steps:
      # Paso 1: Checkout del repositorio
      - uses: actions/checkout@v4
        with:
          submodules: true  # Descargar submódulos (temas de Hugo)
          fetch-depth: 0    # Descargar todo el historial

      # Paso 2: Configuración de Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.125.7'

      # Paso 3: Construcción del sitio principal
      - name: Build Main Hugo Site
        run: hugo --minify --config hugo.toml

      # Paso 4: Despliegue en GitHub Pages (rama gh-ipl-pages1)
      - name: Deploy Main Site
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/
          publish_branch: gh-ipl-pages1

  deploy_prometeo:
    needs: deploy_main  # Este job depende de deploy_main
    runs-on: ubuntu-22.04
    concurrency:
      group: deploy-prometeo-${{ github.ref }}
    steps:
      # Paso 1: Checkout del repositorio
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      # Paso 2: Configuración de Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.125.7'

      # Paso 3: Construcción del sitio Prometeo
      - name: Build Prometeo Hugo Site
        run: hugo --minify --config hugo_new.toml

      # Paso 4: Despliegue en GitHub Pages (rama gh-ipl-pages2)
      - name: Deploy Prometeo Site
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/
          publish_branch: gh-ipl-pages2

  deploy3:
    needs: deploy_prometeo 
    runs-on: ubuntu-22.04
    concurrency:
      group: deploy-prometeo-${{ github.ref }}
    steps:
      # Paso 1: Checkout del repositorio
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      # Paso 2: Configuración de Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.125.7'

      # Paso 3: Construcción del sitio Prometeo
      - name: Build Prometeo Hugo Site
        run: hugo --minify --config hugo_new2.toml

      # Paso 4: Despliegue en GitHub Pages (rama gh-ipl-pages2)
      - name: Deploy Prometeo Site
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/
          publish_branch: gh-ipl-pages3

  copy_prometeo:
    name: Copy Prometeo Content to gh-ipl-pages1
    runs-on: ubuntu-22.04
    needs: deploy_prometeo  # Depende del job anterior que genera gh-ipl-pages2
    steps:
      # Paso 1: Clonar el repositorio y todas las ramas
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Traer todo el historial
          persist-credentials: false  # Usar token para cambios

      # Paso 2: Configurar usuario para Git
      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      # Paso 3: Asegurarse de que ambas ramas existen
      - name: Validar ramas
        run: |
          git fetch --all
          if ! git show-ref --verify --quiet refs/remotes/origin/gh-ipl-pages2; then
            echo "Error: La rama origen (gh-ipl-pages2) no existe."
            exit 1
          fi
          if ! git show-ref --verify --quiet refs/remotes/origin/gh-ipl-pages1; then
            echo "Error: La rama destino (gh-ipl-pages1) no existe."
            exit 1
          fi

      # Paso 4: Cambiar a la rama destino
      - name: Cambiar a gh-ipl-pages1
        run: git checkout gh-ipl-pages1

      # Paso 5: Crear carpeta projects/prometeo/ si no existe
      - name: Crear carpeta destino
        run: mkdir -p projects/prometeo

      # Paso 6: Copiar contenido de gh-ipl-pages2 a projects/prometeo/
      - name: Copiar contenido de Prometeo
        run: |
          git checkout origin/gh-ipl-pages2 -- .
          mv * projects/prometeo/

      # Paso 7: Confirmar y subir cambios
      - name: Subir cambios
        run: |
          git add -A
          git diff-index --quiet HEAD || git commit -m "Merge Prometeo content into gh-ipl-pages1/projects/prometeo"
          git push origin gh-ipl-pages1